# # 연습문제 1 : 가장 높은 점수와 낮은 점수
# print(max(82,77,64,87,71,82),min(82,77,64,87,71,82))
# # 연습문제 2 : 과목 총합
# print(sum([82,77,64,87,71,82]))
# # 연습문제 3 : 과목 평균의 몫과 나머지
# print(divmod(sum([82,77,64,87,71,82]),6))
# # 연습문제 4 : 3,4,-8,-5에서 절대값이 가장 큰 값에서 가장 작은 값의 거듭 제곱
# print(pow(max(3,4,abs(-8),abs(-5)), min(3,4,abs(-8),abs(-5)))) # 복잡한 함수는 거꾸로 생각하기

# 문자열
# 문자열은 숫자를 제외한 모든 문자, 단어, 기호들로 구성된 것

# 이스케이프 문자
# 문자열을 제어하는 효과를 가지고 있는 문자 \로 시작합니다
# 제어문자라고 부르는 경우도 있습니다

# \n --> 한 줄 개행하는 효과를 가지고 있는 이스케이프 문자입니다
# print("안녕하세요\n반갑습니다")

# \t --> 8칸 공백을 만들어주는 이스케이프 문자입니다(TAP키와 동일) --> \t를 쓰기 이전 문자부터 포함해서 셈

# print("abc\tdef")  # (8-3)개 공백
# print("abcdef\tg")  # (8-6)개 공백
# print("abcdefgh\ti")  # 8개 공백

# \" --> "를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자입니다
# ("\"안녕하세요\"라고 말했다")

# \' --> '를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자입니다
# print('\'안녕하세요\'라고 말했다')

# \\ --> \를 문자열로 사용하고 싶을 때 사용하는 이스케이프 문자입니다

# print("아이스 아메리카노는 1500\\입니다")
# print("아이스 아메리카노는 1500\입니다") # \\와 동일한 결과 출력, 숫자 입력시 깨져나옴

# 문자열 연산

# 문자열 더하기
# print("부산"+"시장")
# print("abc"+"123") 
# print("a"+"c"+"d"+"b")

# print("abc"+123) # 문자열 + 숫자열 형태는 에러

# 문자열 곱하기
# 문자열은 반드시 숫자와 곱하기 연산이 가능합니다 --> 문자열 * 문자열 형태는 에러

# print("*"*59)
# print('Hello '*10)

# print('hello'*'hi') --> 문자열 * 문자열 형태는 에러

# 문자열에서 사용할 수 있는 내장 함수

# sep (seperation) 함수 --> 구분 함수
# print("010","1234","5678")
# print("010","1234","5678",sep='-')
# print("010","1234","5678",sep='\t')
# print("몸무게",70,sep=' : ')

# end 함수 
# print("a");print("b")
# print("a",end='')
# print("b")
# print("a",end='+')
# print("b",end='-')
# print("c")

# print("\t\t#### 회비 정보 ####")
# print('='*60)
# print('이름','나이','전화번호','회비',sep='\t')
# print('='*60)
# print('피카추','30','010-1234-5678','\\20,000',sep='\t')
# print('파이리','22','010-2345-6789','\\30,000',sep='\t')
# print('꼬부기','24','010-8817-8888','\\50,000',sep='\t')
# print('='*60)
# print('총합계','100,000',sep='\t\t\t\t')

# print("\t\t#### 회비 정보 ####")
# print('='*60)
# print('이름','나이','전화번호','회비',sep='\t')
# print('='*60)
# print('피카추','30','010-1234-5678','\\20,000',sep='\t')
# print('파이리\t22\t010','2345','6789\t\\30,000',sep='-')    
# print('꼬부기\t24\t',end='')
# print('010','8817','8888',sep='-',end='')
# print('\t\\50,000')
# print('='*60)
# print('총합계','100,000',sep='\t\t\t\t')

# 문자열 포매팅 (Formatting)
# 문자열 안에서 내가 특정 자료형으로 바꾸고 싶을 때 사용하는 문법
# 포매팅은 서식 문자를 사용해서 포매팅을 할 수 있습니다
# print("과자는 1500원 입니다")
# print("과자는 %d원 입니다" %1500)
# print("과자는 {}원 입니다".format(1500))

# 서식 문자
# 서식 문자는 지정된 값을 여러가지 형태로 출력해주는 문자
# 서식 문자는 %로 시작합니다

# 서식 문자 %d 
# %d는 10진수 정수 형태의 값을 사용하고 싶을 때 사용하는 서식 문자

# print("키 : %d" %175)
# print("몸무게 : %d" % 70)
#print("키 : %d" %174.5)  
# %d에 실수를 넣으면 정수에 해당하는 부분만 출력(데이터형에 맞춤)

# 서식 문자를 다수 사용하는 경우
# 서식 문자의 갯수 만큼 반드시 해당하는 값의 갯수도 똑같아야 합니다
#print("%d + %d = %d" %(1,2,1+2))
# print("%d + %d = %d"%(1,2)) # 에러
# print("%d + %d"%(1,2,3)) # 에러
# 다른 표현 방식(Formatting)
# print("{} + {} = {}".format(1,1,1+1))
# print("{} * {} = {}".format(2,10,2*10))



